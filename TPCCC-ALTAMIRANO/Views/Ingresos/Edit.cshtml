@model TPCCC_ALTAMIRANO.Models.Ingreso

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    h2 {
        text-align: center;
        margin-bottom: 30px;
        margin-top: 20px;
    }

</style>
<h2>Administrar Ingreso</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<form id="contact-form" method="post" action="contact.php" role="form">
    <div class="messages"></div>
    <div class="row">

        <div class="col-md-4">
            <div class="form-group">
                <h6>Nombre</h6>
                @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
                @*<div class="help-block with-errors"></div>*@
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <h6>Apellido</h6>
                @Html.EditorFor(model => model.ApellidoCliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ApellidoCliente, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <h6>Telefono</h6>
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <h6>Correo Electronico</h6>
                @Html.EditorFor(model => model.EmailCliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmailCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <h6>Direccion</h6>
                @Html.EditorFor(model => model.DireccionCliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DireccionCliente, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <h6>Modelo</h6>
                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <h6>Marca</h6>
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <h6>Clave</h6>
                @Html.EditorFor(model => model.PassEquipo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PassEquipo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <h6>Falla</h6>
                @Html.TextAreaFor(model => model.FallaCliente, new { @class = "form-control", rows = "2", style = "width: 100%; max-width: 100%;", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.FallaCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <h6>Accesorios</h6>
                @Html.TextAreaFor(model => model.Accesorios, new { @class = "form-control", rows = "2", style = "width: 100%; max-width: 100%;", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Accesorios, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
    <div class="row">
        
        <div class="col-md-6">
            <div class="form-group">
                <h6>Falla Detectada</h6>
                @Html.TextAreaFor(model => model.FallaDetectada, new { @class = "form-control", rows = "2", style = "width: 100%; max-width: 100%;", @placeholder = "Falla Detectada por el tecnico" })
                @Html.ValidationMessageFor(model => model.FallaDetectada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <h6>Reparación realizada</h6>
                @Html.TextAreaFor(model => model.ReparacionRealizada, new { @class = "form-control", rows = "2", style = "width: 100%; max-width: 100%;", @placeholder= "Reparación realizada por el tecnico" })
                @Html.ValidationMessageFor(model => model.ReparacionRealizada, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <h6>Presupuesto</h6>
                @Html.EditorFor(model => model.Presupuesto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Presupuesto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <h6>Pecio Final</h6>
                @Html.EditorFor(model => model.PrecioFinal, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.PrecioFinal, "", new { @class = "text-danger" })
              
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group">
                <h6>Pasar a: </h6>
                @switch (@Model.idEstado)
                {
                    case 1:
                    case 2:
                    case 3:
                        <label class="pdsa-radiobutton btn btn-primary active">
                            @Html.RadioButtonFor(model => model.idEstado, 3)Espera
                        </label>
                        <label class="pdsa-radiobutton btn btn-primary">
                            @Html.RadioButtonFor(model => model.idEstado, 4, new { @checked = true })Reparar
                        </label>
                        <label class="pdsa-radiobutton btn btn-primary">
                            @Html.RadioButtonFor(model => model.idEstado, 5)Cancelar Trabajo
                        </label>
                        break;
                    case 4:
                        <label class="pdsa-radiobutton btn btn-primary active">
                            @Html.RadioButtonFor(model => model.idEstado, 5, new { @checked = true })Para Entregar
                        </label>
                        break;
                    case 5:
                        <label class="pdsa-radiobutton btn btn-primary active">
                            @Html.RadioButtonFor(model => model.idEstado, 6, new { @checked = true })Entregado
                        </label>
                        break;
                }

            </div>
        </div>
    </div>

    @*paso el parámetro returnUrl del método al método [HttpPost] usando un campo oculto en el formulario:*@
    <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />
    <div class="row">
        <div class="col-md-12 text-center">
            <div class="form-group">
                <div class="col-md-12 text-center">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
</form>  
}

    <div>
        @* volver atras desde la pagina en la que estaba*@
        <div class="badge badge-primary text-wrap" style="width: 6rem;">
            <a href="@ViewBag.returnUrl" style="color:white;text-decoration:none">Volver Atras</a>
        </div>

    </div>


